---
import { type CollectionEntry } from "astro:content";

import Button, { buttonClasses } from "@/components/Button.astro";
import { cx } from "@/utils";

type PlayButtonProps = {
  show: CollectionEntry<"shows">;
};

const { show } = Astro.props as PlayButtonProps;
---

<!-- 1. If the current show is not set to the player, set default "assign show button" -->
<template
  x-if={`!$store.player.show || $store.player.show.slug !== '${show.slug}'`}
>
  <Button
    transition:name={`play-button-${show.slug}`}
    @click={`
    $store.player.set('${show.slug}'); 
    const audio = $refs.audio;
    $nextTick(() => $refs.audio.play());
  `}
  >
    Play episode</Button
  >
</template>

<!-- 2. If this is the current show, display the <media-play-button> instead -->
<template
  x-if={`$store.player.show && $store.player.show.slug === '${show.slug}'`}
>
  <media-play-button
    mediacontroller="audio-player"
    class={cx(buttonClasses, "font-poppins inline-flex")}
  >
    <span slot="play">Play episode</span>
    <span slot="pause">Pause episode</span>
  </media-play-button>
</template>
