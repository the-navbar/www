---
import { cx } from "@/utils";
import { getCollection } from "astro:content";

const shows = await getCollection("shows");
---

<div x-show="$store.player.show">
  <media-controller
    id="audio-player"
    audio
    transition:persist="player"
    :class="$store.player.show ? 'fixed' : 'hidden'"
    class={cx(
      "z-30 inset-x-0 bottom-0 bg-white/90 backdrop-blur-sm bg-gradient-to-r from-sky-100/30 via-white to-emerald-100/30 p-4 ring-1 ring-black/5 shadow-[0_7px_10px_5px_rgb(0_0_0/0.2)]",
      "[--media-preview-background:theme(colors.emerald.100)] [--media-secondary-color:transparent] [--media-primary-color:theme(colors.slate.900)] [--media-control-hover-background:rgb(0_0_0/0.05)]",
    )}
  >
    <audio
      x-ref="audio"
      slot="media"
      :onload="console.log('loaded')"
      :onchange="console.log('changed')"
      :src="$store.player.show && $store.player.show.data.mp3Url"></audio>

    <div class="mb-4 flex h-6 items-center justify-between">
      <a
        :href="$store.player.show && /shows/ + $store.player.show.slug"
        class="block font-medium text-slate-900 hover:underline"
        x-text="$store.player.show && $store.player.show.data.title"
      >
      </a>

      <button @click="$refs.audio.pause(); $store.player.reset();">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="3"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="size-5 stroke-black hover:stroke-cyan-500"
          ><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg
        >
      </button>
    </div>

    <media-loading-indicator
      class="pointer-events-none absolute inset-0 grid grid-rows-[1fr,0] place-items-center [--media-icon-color:theme(colors.emerald.500)] [--media-loading-indicator-icon-height:theme(space.20)]"
    ></media-loading-indicator>

    <media-control-bar class={cx("w-full bg-transparent")}>
      <media-play-button></media-play-button>
      <media-time-display showduration></media-time-display>
      <media-time-range
        class={cx(
          "[--media-range-track-color:red] [--media-range-bar-color:theme(colors.sky.400)] [--media-range-thumb-border-radius:2px] [--media-range-thumb-height:12px] [--media-preview-time-text-shadow:none] [--media-range-track-border-radius:4px]",
        )}></media-time-range>
      <media-playback-rate-button></media-playback-rate-button>
      <media-mute-button></media-mute-button>
      <media-volume-range></media-volume-range>
    </media-control-bar>
  </media-controller>
</div>

<script define:vars={{ shows }}>
  document.addEventListener("alpine:init", () => {
    Alpine.store("player", {
      show: null,
      set(slug) {
        const show = shows.find((s) => s.slug === slug);
        this.show = show;
      },
      reset() {
        this.show = null;
      },
    });
  });
</script>
